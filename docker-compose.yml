services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: dh_user
      POSTGRES_PASSWORD: dh_pass
      POSTGRES_DB: data_hygiene
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal

  migrations:
    build:
      context: .
      dockerfile: Dockerfile.migrations
    environment:
      DATABASE_URL: postgresql+psycopg://dh_user:dh_pass@db:5432/data_hygiene
    depends_on:
      - db
    command: alembic upgrade head
    networks:
      - internal

  api:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    environment:
      DATABASE_URL: postgresql+psycopg://dh_user:dh_pass@db:5432/data_hygiene
      ASYNC_DATABASE_URL: postgresql+asyncpg://dh_user:dh_pass@db:5432/data_hygiene
    depends_on:
      - db
      - migrations
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app
      - ./tests:/app/tests
      - ./pytest.ini:/app/pytest.ini
      - ./test_api.py:/app/test_api.py
      - ./test_rules_api.py:/app/test_rules_api.py
    working_dir: /app
    command: sh -c "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    networks:
      - internal

  cloudflared:
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: tunnel --config /etc/cloudflared/config.yml --no-autoupdate run
    volumes:
      - ./cloudflared-config.yml:/etc/cloudflared/config.yml:ro
      - ./63090a6f-b69a-457f-ac79-279f7c5c8fae.json:/etc/cloudflared/63090a6f-b69a-457f-ac79-279f7c5c8fae.json:ro
    depends_on:
      - api
    networks:
      - internal

volumes:
  postgres_data:

networks:
  internal:
    driver: bridge
